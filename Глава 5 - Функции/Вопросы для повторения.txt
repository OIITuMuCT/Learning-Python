Множественный выбор
    1. Группа инструкций, которые существуют в программе с целью выполнения 
    определенной задачи, называется ______.
        а) блоком;
        б) параметром;
        в) функцией;
        г) выражением;
    2. Метод проектирования, который уменьшает дублирование кода внутри программы и
    обеспечивает преимущество за счет использования функций, называется _______.
        а) повторным использованием кода;
        б) методом "разделяй и властвуй";
        в) отладкой;
        г) укрощением работы в команде.
    3. Первая строка определения функции называется _______.
        а) телом;
        б) введением;
        в) инициализацией;
        г) заголовком;
    4. Для того чтобы исполнить функцию, ее ________.
        а) определяют;
        б) вызывают;
        в) импортируют;
        г) экспортируют;
    5. Метод проектирования, который программисты используют для разбиения алгоритма
    на функции, называется ________.
        а) нисходящей разработкой;
        б) укрощением программного кода;
        в) рефакторизацией(перестройкой) программного кода;
        г) иерархическим разбиением на подзадачи.
    6.__________ - это диаграмма, которая дает визуальное представление связей между
    функциями в программе.
        а)блок-схема;
        б)схема функциональных связей;
        в)символьная схема;
        г)иерархическая схема.
    7. Ключевое слово ________ игнорируется интерпретатором Python и может 
    использоваться в качестве местозаполнителя для кода, который будет написан позже.
        а)placeholder;
        б)pass;
        в)pause;
        г)skip.
    8. __________ - это переменная, которая создается внутри функции.
        а)глобальная переменная;
        б)локальная переменная;
        в)скрытая переменная;
        г)ничего из вышеперечисленного; вы не можете создавать переменную внутри функции.
    9. __________ является частью программы, в которой можно обращаться к переменной.
        а)пространство объявления;
        б)область видимости;
        в)область действия;
        г)режим.
    1О.__________ - это часть программы, в которой можно получать доступ к переменной.
        а)область объявлений;
        б)область видимости;
        в)область действия;
        г)режим.
    11.__________ - это порция данных, которая отправляется в функцию.
        а)аргумент;
        б)параметр;
        в)заголовок;
        г)пакет.
    12. __________ - это особая переменная, которая получает порцию данных, когда функция вызывается.
        а)аргумент;
        б)параметр;
        в)заголовок;
        г)пакет.
    13. Переменная, которая видима любой функции в программном файле, называется
        а)локальной переменной;
        б)универсальной переменной;
        в)программной переменной;
        г)глобальной переменной.
    14. По мере возможности вам следует избегать использования в программе _____ переменных.
        а)локальных;
        б)глобальных;
        в)ссылочных;
        г)параметрических.
    15. __________ - это заранее написанная функция, которая встроена в язык программирования.
        а)стандартная функция;
        б)библиотечная функция;
        в)пользовательская функция;
        г)функция кафетерия.
    16. Данная функция стандартной библиотеки возвращает случайное целое число внутри
    заданного диапазона значений.
        а)random;
        б)randint;
        в)random_integer;
        г)uniform.
    17. Данная функция стандартной библиотеки возвращает случайное число с плавающей
    точкой в диапазоне от О.О до 1.0 (но исключая 1.0).
        а)random;
        б)randint;
        в)random_ integer;
        г)uniform.
    18. Данная функция стандартной библиотеки возвращает случайное число с плавающей
    точкой внутри заданного диапазона значений.
        а)random;
        б)randint;
        в)random_ integer;
        г)uniform.
    19. Данная инструкция приводит к завершению функции и отправляет значение в ту часть
    программы, которая вызвала функцию.
        а)end;
        б)send;
        в)exit;
        г)return.
    20. Данный инструмент проектирования описывает входные данные, обработку и выходные
    данные функции.
        а)иерархическая схема;
        б)таблица "ввод-обработка-вывод";
        в)дейтаграммная схема;
        г)схема обработки данных.
    21. Данный тип функций возвращает True либо False.
        а)двоичный;
        б)"истина/ложь";
        в)булева;
        г)логическая.
    22. Данная функция находится в математическом модуле math.
        а)derivative;
        б)factor;
        в)sqrt;
        г)differentiate.
Истина или ложь
1. Фраза "разделяй и властвуй" означает, что все программисты в команде должны быть
разделены и работать в изоляции.
2. Функции упрощают работу программистов в командах.
3. Имена функций должны быть максимально короткими.
4. Вызов функции и определение функции означают одно и то же.
5. Блок-схема показывает иерархические связи между функциями в программе.
6. Иерархическая схема не показывает шаги, которые делаются в функции.
7. Инструкция в одной функции может обращаться к локальной переменной в другой
функции.
8. В Python нельзя писать функции, которые принимают многочисленные аргументы.
9. В Python можно указывать, в какой параметр функции должен быть передан аргумент.
1О. В вызове функции одновременно не могут быть именованные и неименованные аргу­
менты.
11. Некоторые библиотечные функции встроены в интерпретатор Python.
12. Для того чтобы использовать функции модуля random, в программе не требуется наличие
инструкции
import.
13. Сложные математические выражения иногда можно упрощать путем вычленения части
выражения и ее помещения в функцию.
14. Функция в Python может возвращать более одного значения.
15. Таблицы "ввод-обработка-вывод" предоставляют лишь краткие описания входных дан­
ных, обработки и выходных данных функции и не показывают конкретные шаги, пред­
принимаемые в функции.
Короткий ответ
1. Каким образом функции помогают повторно использовать код в программе?
2. Назовите и опишите две части определения функции.
3. Что происходит при исполнении функции, когда достигается конец блока функции?
4. Что такое локальная переменная? Какие инструкции могут обращаться к локальной
переменной?
5. Какова область видимости локальной переменной?
6. Почему глобальные переменные затрудняют отладку программы?
7. Предположим, что вы хотите выбрать случайное число из приведенной ниже последова­
тельности:
о,
5, 10, 15, 20, 25, 30
Какую библиотечную функцию вы бы применили?
8. Какую инструкцию вы должны иметь в функции с возвратом значения?
9. Какие три элемента перечислены в таблице "ввод-обработка-вывод"?
10. Что такое булева функция?
11. В чем преимущества от разбиения большой программы на модули?
Алгоритмический тренажер
1. Напишите функцию с именем times _ ten. Эта функция должна принимать аргумент и по­
казывать результат умножения аргумента на 10.
2. Исследуйте приведенный ниже заголовок функции, затем напишите инструкцию, которая
вызывает эту функцию, передавая 12 в качестве аргумента.
def show_value(quantity):
3. Взгляните на приведенный ниже заголовок функции:
def my_function(a,
Ь,
с):
Теперь взгляните на приведенный ниже вызов функции my
my_function(З,
function:
2, 1)
Какое значение будет присвоено а, когда этот вызов исполнится? Какое значение будет
присвоено ь? Какое значение будет присвоено с?
4. Что покажет приведенная ниже программа?
def main():
х
=
1
3.4
print (х, у)
change_us(x,
print (х, у)
у =
у)
def change_us(a,
а =О
ь =о
print(a,
Ь):
Ь)
main()
5. Взгляните на приведенное ниже определение функции:
def my_function(a,b,c)
    d =(а+с)/Ь:
    print (d)
    Напишите инструкцию, которая вызывает эту функцию и применяет именованные
    аргументы для передачи 2 в а, 4 в ь и 6 в с.
    Какое значение будет показано, когда исполнится вызов функции?
6. Напишите инструкцию, которая генерирует случайное число в диапазоне от 1 до 100
и присваивает его переменной с именем rand.
7. Приведенная ниже инструкция вызывает функцию half, возвращающую значение, кото­
рое вдвое меньше аргумента. (Допустим, что переменная numЬer ссылается на веществен­
ное значение с типом float.) Напишите код для этой функции.
result =half(numЬer)
8. Программа содержит приведенное ниже определение функции:
def cube (num) :
return num * num * num
Напишите инструкцию, которая передает значение
4 в эту функцию и присваивает
возвращаемое ею значение переменной result.
9. Напишите функцию times_ten, которая принимает numЬer в качестве аргумента. Когда
функция вызывается, она должна возвращать значение ее аргумента, умноженное на 1О.